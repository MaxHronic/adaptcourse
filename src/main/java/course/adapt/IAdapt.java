package course.adapt;

import lists.*;
import sructures.Answer;
import sructures.Authorization;
import sructures.Course;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.io.IOException;
import java.util.ArrayList;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 */
@WebService(name = "IAdapt")
@SOAPBinding(style = SOAPBinding.Style.RPC)

public interface IAdapt {


    /**
     * @param login    - логин
     * @param password - пароль
     * @return personId
     */
    @WebMethod(action = "Authorize", operationName = "Authorize")
    @WebResult(name = "AuthorizeResult")
    @RequestWrapper(localName = "Authorize")
    @ResponseWrapper(localName = "AuthorizeResponse")
    Authorization Authorize(
            @WebParam(name = "login")
                    String login,
            @WebParam(name = "password")
                    String password) throws IOException;
//

    /**
     * @param login    - логин
     * @param password - пароль
     * @param status   - статус (учитель/студент)
     * @return returns personId
     */
    @WebMethod(action = "Registrate", operationName = "Registrate")
    @WebResult(name = "RegistrateResult")
    @RequestWrapper(localName = "Registrate")
    @ResponseWrapper(localName = "RegistrateResponse")
    long Register(
            @WebParam(name = "login")
                    String login,
            @WebParam(name = "password")
                    String password,
            @WebParam(name = "status")
                    boolean status,
            @WebParam(name = "name")
                    String name,
            @WebParam(name = "surname")
                    String surname) throws IOException;

    /**
     * @param personId - идентификатор
     * @param courseId - код курса
     * @return returns courseId
     */
    @WebMethod(action = "SubscribeCourse", operationName = "SubscribeCourse")
    @WebResult(name = "SubscribeCourseResult")
    @RequestWrapper(localName = "SubscribeCourse")
    @ResponseWrapper(localName = "SubscribeCourseResponse")
    String SubscribeCourse(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "courseId")
                    long courseId,
            @WebParam(name = "topicId")
                    long topicId) throws IOException;

    /**
     * @param personId - идентификатор
     * @param courseId - код курса
     * @return returns Course
     */
    @WebMethod(action = "GetCourse", operationName = "GetCourse")
    @WebResult(name = "GetCourseResult")
    @RequestWrapper(localName = "GetCourse")
    @ResponseWrapper(localName = "GetCourseResponse")
    Course GetCourse(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "courseId")
                    long courseId) throws IOException;


    /**
     * @param personId - идентификатор
     * @param name     -
     * @return returns Course
     */
    @WebMethod(action = "FindCourses", operationName = "FindCourses")
    @WebResult(name = "FindCoursesResult")
    @RequestWrapper(localName = "FindCourses")
    @ResponseWrapper(localName = "FindCoursesResponse")
    CourseList FindCourses(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "request")
                    String name) throws IOException;


    /**
     * @param personId - идентификатор
     * @return returns Course
     */
    @WebMethod(action = "getMyCourses", operationName = "getMyCourses")
    @WebResult(name = "getMyCoursesResult")
    @RequestWrapper(localName = "getMyCourses")
    @ResponseWrapper(localName = "getMyCoursesResponse")
    CourseList getMyCourses(
            @WebParam(name = "personId")
                    long personId) throws IOException;


    /**
     * @param personId - идентификатор
     * @param courseId - код курса
     * @return returns OperationStatus
     */
    @WebMethod(action = "GetTest", operationName = "GetTest")
    @WebResult(name = "GetTestResult")
    @RequestWrapper(localName = "GetTest")
    @ResponseWrapper(localName = "GetTestResponse")
    Questions GetTest(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "courseId")
                    long courseId,
            @WebParam(name = "topicId")
                    long topicId,
            @WebParam(name = "total")
                    boolean total) throws IOException;

    /**
     * @param personId - идентификатор
     * @return returns CourseProgress
     */
    @WebMethod(action = "GetMyProgress", operationName = "GetMyProgress")
    @WebResult(name = "GetMyProgressResult")
    @RequestWrapper(localName = "GetMyProgress")
    @ResponseWrapper(localName = "GetMyProgressResponse")
    ProgressList GetMyProgress(
            @WebParam(name = "personId")
                    long personId) throws IOException;

    //
//    /**
//     * @param personId  - идентификатор
//     * @param courseId
//     * @return returns PersonalProgress
//     */
    @WebMethod(action = "GetCourseProgress", operationName = "GetCourseProgress")
    @WebResult(name = "GetCourseProgressResult")
    @RequestWrapper(localName = "GetCourseProgress")
    @ResponseWrapper(localName = "GetCourseProgressResponse")
    Course GetCourseProgress(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "courseId")
                    long courseId) throws IOException;


    /**
     * @param personId
     * @param name
     * @param courseText
     * @return returns courseId
     */
    @WebMethod(action = "SetCourse", operationName = "SetCourse")
    @WebResult(name = "SetCourseResult")
    @RequestWrapper(localName = "SetCourse")
    @ResponseWrapper(localName = "SetCourseResponse")
    long SetCourse(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "name")
                    String name,
            @WebParam(name = "courseText")
                    String courseText,
            @WebParam(name = "extCourseText")
                    TopicList topics) throws IOException;


    @WebMethod(action = "SetQuestion", operationName = "SetQuestions")
    @WebResult(name = "SetQuestionsResult")
    @RequestWrapper(localName = "SetQuestions")
    @ResponseWrapper(localName = "SetQuestionsResponse")
    void AddQuestion(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "topicId")
                    long topicId,
            @WebParam(name = "in_topicId")
                    long in_topicId,
            @WebParam(name = "text")
                    String text,
            @WebParam(name = "answer1")
                    String ans1,
            @WebParam(name = "weight1")
                    float w1,
            @WebParam(name = "answer2")
                    String ans2,
            @WebParam(name = "weight2")
                    float w2,
            @WebParam(name = "answer3")
                    String ans3,
            @WebParam(name = "weight3")
                    float w3,
            @WebParam(name = "answer4")
                    String ans4,
            @WebParam(name = "weight4")
                    float w4,
            @WebParam(name = "q_weight")
                    float q_w,
            @WebParam(name = "control")
                    boolean ct) throws IOException;


    @WebMethod(action = "EditQuestion", operationName = "EditQuestion")
    @WebResult(name = "EditQuestionResult")
    @RequestWrapper(localName = "EditQuestion")
    @ResponseWrapper(localName = "EditQuestionResponse")
    void EditQuestion(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "topicId")
                    long topicId,
            @WebParam(name = "in_topicId")
                    long in_topicId,
            @WebParam(name = "text")
                    String text,
            @WebParam(name = "answer1")
                    String ans1,
            @WebParam(name = "weight1")
                    float w1,
            @WebParam(name = "answer2")
                    String ans2,
            @WebParam(name = "weight2")
                    float w2,
            @WebParam(name = "answer3")
                    String ans3,
            @WebParam(name = "weight3")
                    float w3,
            @WebParam(name = "answer4")
                    String ans4,
            @WebParam(name = "weight4")
                    float w4,
            @WebParam(name = "q_weight")
                    float q_w,
            @WebParam(name = "control")
                    boolean ct) throws IOException;


    @WebMethod(action = "EditCourse", operationName = "EditCourse")
    @WebResult(name = "EditCourseResult")
    @RequestWrapper(localName = "EditCourse")
    @ResponseWrapper(localName = "EditCourseResponse")
    long EditCourse(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "courseId")
                    long courseId) throws IOException;

    @WebMethod(action = "getCourseTopics", operationName = "getCourseTopics")
    @WebResult(name = "getCourseTopicsResult")
    @RequestWrapper(localName = "getCourseTopics")
    @ResponseWrapper(localName = "getCourseTopicsResponse")
    TopicList getCourseTopics(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "courseId")
                    long courseId,
            @WebParam(name = "in_search")
                    boolean key) throws IOException;


    @WebMethod(action = "getTopicPages", operationName = "getTopicPages")
    @WebResult(name = "getTopicPagesResult")
    @RequestWrapper(localName = "getTopicPages")
    @ResponseWrapper(localName = "getTopicPagesResponse")
    TopicPages getTopicPages(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "topicId")
                    long topicId) throws IOException;


    @WebMethod(action = "GetMark", operationName = "GetMark")
    @WebResult(name = "GetMarkResult")
    @RequestWrapper(localName = "GetMark")
    @ResponseWrapper(localName = "GetMarkResponse")
    float GetMark(
            @WebParam(name = "personId")
                    long personId,
            @WebParam(name = "courseId")
                    long courseId,
            @WebParam(name = "topicId")
                    long topicId,
            @WebParam(name = "result")
                    ArrayList<Answer> result) throws IOException;

    @WebMethod(action = "GetTeachRate", operationName = "GetTeachRate")
    @WebResult(name = "GetTeachRateResult")
    @RequestWrapper(localName = "GetTeachRate")
    @ResponseWrapper(localName = "GetTeachRateResponse")
    Teachers GetTeachRate() throws IOException;
}
